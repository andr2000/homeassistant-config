# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
binary_sensor: !include binary_sensor.yaml

# Create UI from configuration file
#lovelace:
#  mode: yaml

# Example configuration.yaml entry
logger:
  default: info
  logs:
    homeassistant.components.ebusd: debug

# Enable python scripts in python_scripts folder
python_script:

# Telegram Bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_chat_id

notify:
  - name: telegram
    platform: telegram
    chat_id: !secret telegram_chat_id

# MQTT broker
mqtt:
  broker: !secret vaillant_ip
  client_id: homeassistant

# Vaillant control
ebusd:
  host: !secret vaillant_ip
  port: 8888
  cache_ttl: 15
  circuits:
    - circuit: 'b7v'
      name: 'b7v'
      monitored_conditions:
        - 'ActualFlowTemperatureDesired'
        - 'Zone1ActualRoomTemperatureDesired'
        - 'Zone1RoomTemperature'
        - 'Zone1DayTemperature'
        - 'Zone1NightTemperature'
        - 'HWTemperatureDesired'
        - 'DisplayedOutsideTemp'
        - 'HwcStorageTemp'
    - circuit: 'bai'
      name: 'bai'
      monitored_conditions:
        - 'FlowTemperature'
        - 'DesiredFlowTemperature'
        - 'ReturnTemperature'
        - 'ModulationTempDesired'
        - 'WaterPressure'
        - 'PumpPower'

# HWC recirculation pump
switch:
  - platform: mqtt
    name: "Sonoff power"
    state_topic: "stat/sonoff-rec-pump/RESULT"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/sonoff-rec-pump/POWER"
    availability_topic: "tele/sonoff-rec-pump/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
